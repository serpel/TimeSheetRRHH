@model RRHH.Models.TimeSheetViewModel

@{
    ViewBag.Title = "Home Page";
}

@section Styles{
    <head>
        <link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
        <link href="~/Content/assets/plugins/bootstrap-datepicker/css/datepicker.css" rel="stylesheet" type="text/css" />
        <link href="~/Content/assets/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
    </head>
}

<div class="row">
    <div class="col-md-3">
    </div>
    <div class="col-md-6">
        <div class="grid simple">
            <div class="grid-title no-border">
            </div>
            <div class="grid-body no-border">
                <div class="row column-seperation">
                    @using (Html.BeginForm("Index", "Home", FormMethod.Get))
                    {
                        <div class="col-md-5">
                            <div>
                                @Html.DropDownList("department", null, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="input-append success date col-md-12 col-lg-10">
                                <input type="text" class="form-control" id="date" name="date">
                                <span class="add-on"><span class="arrow"></span><i class="fa fa-th"></i></span>
                            </div>
                        </div>
                        <div class="col-lg-2">
                            <div class="form-group">
                                <input type="submit" value="Search" placeholder="Search" class="btn btn-primary" id="search" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-3">
        </div>
    </div>
</div>

<div class="row-fluid">
    <div class="span12">
        <div class="grid simple ">
            <div class="grid-title">
                <h4>Employees</h4>
                <div class="tools"> <a href="javascript:;" class="collapse"></a> <a href="#grid-config" data-toggle="modal" class="config"></a> <a href="javascript:;" class="reload"></a> <a href="javascript:;" class="remove"></a> </div>
            </div>
            <div class="grid-body ">
                @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "timesheetform" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <table class="table table-hover table-condensed" id="timesheet">
                        <thead>
                            <tr>
                                <th style="width:7%">Employee</th>
                                <th style="width:2%">Code</th>
                                <th style="width:5%">Clock In</th>
                                <th style="width:5%">Clock Out</th>
                                <th style="width:5%">Delay Time</th>
                                <th style="width:5%">Early Leave</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (var i = 0; i < Model.TimeSheetList.Count; i++)
                            {
                                <tr>                                  
                                    <td>
                                        @Model.TimeSheetList[i].Employee.FullName
                                        @Html.HiddenFor(m => m.TimeSheetList[i].TimeSheetId)
                                        @Html.HiddenFor(m => m.TimeSheetList[i].EmployeeId)
                                        <input type="text" class="hidden isManualCheckin" value="@Model.TimeSheetList[i].IsManualIn">
                                        <input type="text" class="hidden isManualCheckout" value="@Model.TimeSheetList[i].IsManualOut">
                                        @Html.HiddenFor(m => m.TimeSheetList[i].InsertedAt)
                                        @Html.HiddenFor(m => m.TimeSheetList[i].UpdatedAt)
                                        @Html.HiddenFor(m => m.TimeSheetList[i].Date)
                                        @Html.EditorFor(m => m.TimeSheetList[i].ShiftTime.StartTime, new { htmlAttributes = new { @class = "hidden shiftCheckin" } })
                                        @Html.EditorFor(m => m.TimeSheetList[i].ShiftTime.EndTime, new { htmlAttributes = new { @class = "hidden shiftCheckout" } })
                                    </td>
                                    <td>
                                        @Model.TimeSheetList[i].Employee.EmployeeCode
                                    </td>
                                    <td>
                                        <div class='input-group date datetimepicker'>
                                            @Html.EditorFor(m => m.TimeSheetList[i].In, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="input-group date datetimepicker">
                                            @Html.EditorFor(m => m.TimeSheetList[i].Out, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                                            <span class="input-group-addon">
                                                <span class="glyphicon glyphicon-calendar"></span>
                                            </span>
                                        </div>
                                    </td>
                                    <td>
                                        <input type="text" value="0" class="form-control delaytime" readonly/>
                                    </td>
                                    <td>
                                        <input type="text" value="0" class="form-control earlyleave" readonly/>
                                    </td>                                   
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="form-actions">
                        <div class="pull-right">
                            <button class="btn btn-danger btn-cons" type="submit" id="submit"><i class="icon-ok"></i> Save</button>
                            <button class="btn btn-white btn-cons" type="button" id="cancel">Cancel</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Content/assets/plugins/bootstrap-datepicker/js/bootstrap-datepicker.js" type="text/javascript"></script>
    <script src="~/Content/assets/plugins/boostrap-clockpicker/bootstrap-clockpicker.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $('#date').datepicker({
                autoclose: true,
                todayHighlight: true,
                format: "yyyy-mm-dd"
            });

            $('.datetimepicker').datetimepicker();

            //$('.datetimepicker').on("dp.change", function (e) {
            //    var elem = $(this);
            //    alert(elem.attr("name"));
            //});

            function colorManualEditedCell(tds) {
                var isManualCheckin = tds.eq(0).find('.isManualCheckin').val();
                var isManualCheckout = tds.eq(0).find('.isManualCheckout').val();

                if(isManualCheckin)
                {
                    tds.eq(2).addClass('warning');
                }

                if (isManualCheckout) {
                    tds.eq(3).addClass('warning');
                }
            }

            function calcDelayTimeAndEarlyOut(tds) {
                var checkin = moment(tds.eq(2).find('input').val()).format("HH:mm:ss");
                var checkout = moment(tds.eq(3).find('input').val()).format("HH:mm:ss");
                var shiftCheckin = tds.eq(0).find('.shiftCheckin').val();
                var shiftCheckout = tds.eq(0).find('.shiftCheckout').val();

                var tmpDate = "2000/01/01 ";
                var dtCheckin = new Date(tmpDate + checkin);
                var dtCheckout = new Date(tmpDate + checkout);
                var dtShiftCheckin = new Date(tmpDate + shiftCheckin);
                var dtShiftCheckout = new Date(tmpDate + shiftCheckout);

                //calcula entradas tardes y salidas tempranas
                var delaytime = tds.eq(4).find('input');
                if (dtCheckin > dtShiftCheckin) {
                    var diff = (((Math.abs(dtCheckin - dtShiftCheckin)) / 1000 / 3600) * 100) / 100;
                    delaytime.val(diff.toFixed(2));
                }

                var latetime = tds.eq(5).find('input');
                if (dtCheckout < dtShiftCheckout) {
                    //Svar diff = 0; //TODO: fix early in
                    //var diff = (((dtCheckout.addHours(-dtShiftCheckout)) / 1000 / 3600) * 100) / 100;
                    //latetime.val(diff.toFixed(2));
                }
            }

            $('#timesheet>tbody>tr').each(function (k, v) {
                var tds = $(this).find('td');

                calcDelayTimeAndEarlyOut(tds);
                colorManualEditedCell(tds);
            });

            $('#submit').click(function () {
                $.ajax({
                    url: '@Url.Action("Save")',
                    type: 'POST',
                    async: false,
                    data: $('#timesheetform').serialize(),
                    success: function (data) {
                        if (data.success == true) {
                            alert('Successfully done.');
                        }
                    }
                });
            });
        });
    </script>
}
